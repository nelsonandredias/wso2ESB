<?xml version="1.0" encoding="UTF-8"?>
<api context="/healthcare" name="HealthcareAPI" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/querydoctor/{category}">
        <inSequence>
            <log description="Request Log" level="custom">
                <property name="Log Property message" value="&quot;Welcome to HealthcareService&quot;"/>
            </log>
            <log description="Log URI parameter" level="custom">
                <property expression="get-property('uri.var.category')" name="URI Parameter"/>
            </log>
            <send>
                <endpoint key="QueryDoctorEP"/>
            </send>
        </inSequence>
        <outSequence>
            <send/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/categories/{category}/reserve">
        <inSequence>
            <log description="Hospital Log" level="custom">
                <property expression="get-property('uri.var.category')" name="Category"/>
                <property expression="json-eval($.hospital)" name="Hospital"/>
            </log>
            <property description="Set Property with Hospital" expression="json-eval($.hospital)" name="HospitalProperty" scope="default" type="STRING"/>
            <log description="Card Number Log" level="custom">
                <property expression="json-eval($.cardNo)" name="Card Number"/>
            </log>
            <property description="Set Property with Card Number" expression="json-eval($.cardNo)" name="card_numberProperty" scope="default" type="STRING"/>
            <datamapper config="gov:datamapper/RequestMapping.dmc" inputSchema="gov:datamapper/RequestMapping_inputSchema.json" inputType="JSON" outputSchema="gov:datamapper/RequestMapping_outputSchema.json" outputType="JSON" xsltStyleSheet="gov:datamapper/RequestMapping_xsltStyleSheet.xml"/>
            <switch description="Get Hospital" source="get-property('HospitalProperty')">
                <case regex="grand oak community hospital">
                    <call-template description="Call Hospital Routing Template" target="HospitalRoutingTemplate">
                        <with-param name="setHospital" value="grandoaks"/>
                    </call-template>
                    <call>
                        <endpoint key="GrandOakEP"/>
                    </call>
                </case>
                <case regex="clemency medical center">
                    <call-template description="Call Hospital Routing Template" target="HospitalRoutingTemplate">
                        <with-param name="setHospital" value="clemency"/>
                    </call-template>
                    <call>
                        <endpoint key="ClemencyEP"/>
                    </call>
                </case>
                <case regex="pine valley community hospital">
                    <call-template target="HospitalRoutingTemplate">
                        <with-param name="setHospital" value="pinevalley"/>
                    </call-template>
                    <call>
                        <endpoint key="PineValleyEP"/>
                    </call>
                </case>
                <default>
                    <log description="Default Log" level="custom">
                        <property expression="fn:concat('Invalid hospital - ', get-property('Hospital'))" name="message"/>
                    </log>
                    <respond description="Default Response"/>
                </default>
            </switch>
            <log description="Hospital Response">
                <property expression="json-eval($)" name="HospitalEP Response"/>
            </log>
            <log description="Info Log" level="custom">
                <property expression="json-eval($.appointmentNumber)" name="Appointment Number"/>
                <property expression="json-eval($.doctor)" name="Doctor info"/>
                <property expression="json-eval($.patient)" name="Patient Info"/>
            </log>
            <property description="Set Appointment Number to ChannelingFeeEP Service" expression="json-eval($.appointmentNumber)" name="uri.var.appointment_idProperty" scope="default" type="STRING"/>
            <property description="Set Doctor Info to ChannelingFeeEP Service" expression="json-eval($.doctor)" name="uri.var.doctorInfoProperty" scope="default" type="STRING"/>
            <property description="Set Patient Info to ChannelingFeeEP Service" expression="json-eval($.patient)" name="uri.var.patientInfoProperty" scope="default" type="STRING"/>
            <log description="ChannelingFeeEP URI parameters LOG">
                <property expression="get-property('uri.var.hospitalProperty')" name="requested uri.var.hospitalProperty"/>
                <property expression="get-property('uri.var.appointment_idProperty')" name="requested uri.var.appointment_idProperty"/>
            </log>
            <call>
                <endpoint key="ChannelingFeeEP"/>
            </call>
            <log description="ChannelingFeeEP Response" level="custom">
                <property expression="json-eval($)" name="ChannelingFeeEP Response"/>
            </log>
            <property description="Set Fee to SettlePaymentEP Service" expression="json-eval($.actualFee)" name="actual_feeProperty" scope="default" type="STRING"/>
            <payloadFactory description="Set body payload of POST Request to SettlePaymentEP Service" media-type="json">
                <format>{"appointmentNumber":$1, "doctor":$2, "patient":$3, "fee":$4, "confirmed":"false", "card_number":"$5"}</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:uri.var.appointment_idProperty"/>
                    <arg evaluator="xml" expression="$ctx:uri.var.doctorInfoProperty"/>
                    <arg evaluator="xml" expression="$ctx:uri.var.patientInfoProperty"/>
                    <arg evaluator="xml" expression="$ctx:actual_feeProperty"/>
                    <arg evaluator="xml" expression="$ctx:card_numberProperty"/>
                </args>
            </payloadFactory>
            <log description="Payload Log" level="custom">
                <property expression="json-eval($)" name="Payload Log"/>
            </log>
            <store description="Store the payment request" messageStore="PaymentRequestMessageStore"/>
            <payloadFactory description="Set body response" media-type="json">
                <format>{"message":" Payment request successfully submitted. Payment confirmation will be sent via email ."}</format>
                <args/>
            </payloadFactory>
            <respond description="Response"/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
